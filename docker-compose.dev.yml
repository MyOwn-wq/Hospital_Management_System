version: '3.8'

services:
  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - hospital_network

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3001,http://127.0.0.1:3001
    volumes:
      - ./backend:/app
      - media_files:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - redis
    networks:
      - hospital_network
    command: >
      sh -c "python manage.py migrate &&
              python manage.py collectstatic --noinput &&
              gunicorn hospital.wsgi:application --bind 0.0.0.0:8000"

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
    volumes:
      - ./backend:/app
    depends_on:
      - redis
    networks:
      - hospital_network
    command: celery -A hospital worker --loglevel=info

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
    volumes:
      - ./backend:/app
    depends_on:
      - redis
    networks:
      - hospital_network
    command: celery -A hospital beat --loglevel=info

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_BASE_URL=http://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - hospital_network
    command: npm start

volumes:
  media_files:

networks:
  hospital_network:
    driver: bridge
